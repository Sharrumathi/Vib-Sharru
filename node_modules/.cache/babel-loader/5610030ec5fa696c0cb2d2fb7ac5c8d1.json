{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hp/Git-Vib/src/Components/BSTable.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Pagination from \"react-js-pagination\"; // import 'bootstrap-less';\n\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'taskName',\n  headerName: 'TASK NAME',\n  width: 130\n}, {\n  field: 'lob',\n  headerName: 'LOB',\n  width: 130\n}, {\n  field: 'subTask',\n  headerName: 'SUB TASK',\n  // type: 'number',\n  width: 130\n}, {\n  field: 'step',\n  headerName: 'STEP',\n  // description: 'This column has a value getter and is not sortable.',\n  // sortable: false,\n  width: 130 //     valueGetter: (params) =>\n  //       `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n\n}, //   {\n//     field: 'subTask',\n//     headerName: 'SUB TASK',\n//     width: 130,\n//   },\n{\n  field: 'dueDate',\n  headerName: 'DUE DATE',\n  width: 130\n}];\nconst rows = [{\n  id: 1,\n  taskName: 'Snow',\n  lob: 'aaa',\n  subTask: 'Jon',\n  step: 35,\n  dueDate: 'www'\n}, {\n  id: 1,\n  taskName: 'Snow',\n  lob: 'aaa',\n  subTask: 'Jon',\n  step: 35,\n  dueDate: 'www'\n}, {\n  id: 1,\n  taskName: 'Snow',\n  lob: 'aaa',\n  subTask: 'Jon',\n  step: 35,\n  dueDate: 'www'\n}, {\n  id: 1,\n  taskName: 'Snow',\n  lob: 'aaa',\n  subTask: 'Jon',\n  step: 35,\n  dueDate: 'www'\n}, {\n  id: 1,\n  taskName: 'Snow',\n  lob: 'aaa',\n  subTask: 'Jon',\n  step: 35,\n  dueDate: 'www'\n}, {\n  id: 1,\n  taskName: 'Snow',\n  lob: 'aaa',\n  subTask: 'Jon',\n  step: 35,\n  dueDate: 'www'\n} //   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\nconst sampleJson = [{\n  \"id\": 1,\n  \"taskName\": 'aaa',\n  \"lob\": 'aaa',\n  \"subTask\": 'aaa',\n  \"step\": 35,\n  \"dueDate\": 'aaa'\n}, {\n  \"id\": 2,\n  \"taskName\": 'bbb',\n  \"lob\": 'bbb',\n  \"subTask\": 'bbb',\n  \"step\": 35,\n  \"dueDate\": 'bbb'\n}, {\n  \"id\": 3,\n  \"taskName\": 'ccc',\n  \"lob\": 'ccc',\n  \"subTask\": 'ccc',\n  \"step\": 35,\n  \"dueDate\": 'ccc'\n}, {\n  \"id\": 4,\n  \"taskName\": 'ddd',\n  \"lob\": 'ddd',\n  \"subTask\": 'ddd',\n  \"step\": 35,\n  \"dueDate\": 'ddd'\n}, {\n  \"id\": 5,\n  \"taskName\": 'eee',\n  \"lob\": 'eee',\n  \"subTask\": 'eee',\n  \"step\": 35,\n  \"dueDate\": 'eee'\n}, {\n  \"id\": 6,\n  \"taskName\": 'ddd',\n  \"lob\": 'ddd',\n  \"subTask\": 'ddd',\n  \"step\": 35,\n  \"dueDate\": 'ddd'\n}];\n\nclass DataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      activePage: 1\n    };\n\n    this.handlePageChange = pageNumber => {\n      console.log(`active page is ${pageNumber}`);\n      this.setState({\n        data: sampleJson\n      });\n      this.setState({\n        activePage: pageNumber\n      });\n    };\n  }\n\n  render() {\n    const allData = sampleJson.map(item => {\n      return item; // return <li key={item.id}>{item.title}</li>;\n    });\n    console.log('alladata', allData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '75%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: sampleJson,\n          columns: columns,\n          pageSize: 3,\n          checkboxSelection: true,\n          pagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        activePage: this.state.activePage,\n        itemsCountPerPage: 2,\n        totalItemsCount: 6,\n        pageRangeDisplayed: 5,\n        onChange: this.handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default DataTable; // export default function DataTable() {\n//     const count = 2\n//     console.log('sample json', sampleJson)\n//   return (\n//       <div>\n//     <div style={{ height: 400, width: '75%' }}>\n//       <DataGrid rows={rows} columns={columns} pageSize={count} checkboxSelection />\n//     </div>\n//     <Pagination\n//        activePage={1}\n//        itemsCountPerPage={count}\n//        totalItemsCount={450}\n//        pageRangeDisplayed={5}\n//        onChange={handlePageChange}\n//     />\n//     <TablePagination />\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/hp/Git-Vib/src/Components/BSTable.js"],"names":["React","DataGrid","TablePagination","Pagination","columns","field","headerName","width","rows","id","taskName","lob","subTask","step","dueDate","sampleJson","DataTable","Component","state","data","activePage","handlePageChange","pageNumber","console","log","setState","render","allData","map","item","height"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE,IAA3B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,UAAU,EAAE,WAAjC;AAA8CC,EAAAA,KAAK,EAAE;AAArD,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,UAAU,EAAE,KAA5B;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAHc,EAId;AACEF,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,UAAU,EAAE,UAFd;AAGE;AACAC,EAAAA,KAAK,EAAE;AAJT,CAJc,EAUd;AACEF,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,UAAU,EAAE,MAFd;AAGE;AACA;AACAC,EAAAA,KAAK,EAAE,GALT,CAMF;AACA;;AAPE,CAVc,EAmBhB;AACA;AACA;AACA;AACA;AACE;AACEF,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,UAAU,EAAE,UAFd;AAGEC,EAAAA,KAAK,EAAE;AAHT,CAxBc,CAAhB;AA+BA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,GAAG,EAAE,KAAhC;AAAuCC,EAAAA,OAAO,EAAE,KAAhD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,OAAO,EAAE;AAA1E,CADW,EAEX;AAAEL,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,GAAG,EAAE,KAAhC;AAAuCC,EAAAA,OAAO,EAAE,KAAhD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,OAAO,EAAE;AAA1E,CAFW,EAGX;AAAEL,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,GAAG,EAAE,KAAhC;AAAuCC,EAAAA,OAAO,EAAE,KAAhD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,OAAO,EAAE;AAA1E,CAHW,EAIX;AAAEL,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,GAAG,EAAE,KAAhC;AAAuCC,EAAAA,OAAO,EAAE,KAAhD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,OAAO,EAAE;AAA1E,CAJW,EAKX;AAAEL,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,GAAG,EAAE,KAAhC;AAAuCC,EAAAA,OAAO,EAAE,KAAhD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,OAAO,EAAE;AAA1E,CALW,EAMX;AAAEL,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,GAAG,EAAE,KAAhC;AAAuCC,EAAAA,OAAO,EAAE,KAAhD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,OAAO,EAAE;AAA1E,CANW,CAOb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAda,CAAb;AAiBA,MAAMC,UAAU,GAAG,CACf;AACE,QAAM,CADR;AAEE,cAAY,KAFd;AAGE,SAAO,KAHT;AAIE,aAAW,KAJb;AAKE,UAAQ,EALV;AAME,aAAW;AANb,CADe,EASf;AACI,QAAM,CADV;AAEI,cAAY,KAFhB;AAGI,SAAO,KAHX;AAII,aAAW,KAJf;AAKI,UAAQ,EALZ;AAMI,aAAW;AANf,CATe,EAiBf;AACI,QAAM,CADV;AAEI,cAAY,KAFhB;AAGI,SAAO,KAHX;AAII,aAAW,KAJf;AAKI,UAAQ,EALZ;AAMI,aAAW;AANf,CAjBe,EAyBb;AACE,QAAM,CADR;AAEE,cAAY,KAFd;AAGE,SAAO,KAHT;AAIE,aAAW,KAJb;AAKE,UAAQ,EALV;AAME,aAAW;AANb,CAzBa,EAiCb;AACE,QAAM,CADR;AAEE,cAAY,KAFd;AAGE,SAAO,KAHT;AAIE,aAAW,KAJb;AAKE,UAAQ,EALV;AAME,aAAW;AANb,CAjCa,EAyCb;AACE,QAAM,CADR;AAEE,cAAY,KAFd;AAGE,SAAO,KAHT;AAIE,aAAW,KAJb;AAKE,UAAQ,EALV;AAME,aAAW;AANb,CAzCa,CAAnB;;AAqDE,MAAMC,SAAN,SAAwBhB,KAAK,CAACiB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAF8B;;AAAA,SAOtCC,gBAPsC,GAOnBC,UAAU,IAAI;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBF,UAAW,EAAzC;AACA,WAAKG,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAEJ;AADI,OAAd;AAGA,WAAKU,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAEE;AAAd,OAAd;AACD,KAbmC;AAAA;;AAgBtCI,EAAAA,MAAM,GAAG;AAEL,UAAMC,OAAO,GAAGZ,UAAU,CAACa,GAAX,CAAeC,IAAI,IAAI;AACnC,aAAOA,IAAP,CADmC,CAEnC;AACD,KAHa,CAAhB;AAKEN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,OAAxB;AACF,wBACA;AAAA,8BACA;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE,GAAV;AAAevB,UAAAA,KAAK,EAAE;AAAtB,SAAZ;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEQ,UAAhB;AAA4B,UAAA,OAAO,EAAEX,OAArC;AAA8C,UAAA,QAAQ,EAAE,CAAxD;AAA2D,UAAA,iBAAiB,MAA5E;AAA6E,UAAA,UAAU;AAAvF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,UAAD;AACG,QAAA,UAAU,EAAE,KAAKc,KAAL,CAAWE,UAD1B;AAEG,QAAA,iBAAiB,EAAE,CAFtB;AAGG,QAAA,eAAe,EAAE,CAHpB;AAIG,QAAA,kBAAkB,EAAE,CAJvB;AAKG,QAAA,QAAQ,EAAE,KAAKC;AALlB;AAAA;AAAA;AAAA;AAAA,cALA,eAaA,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAiBH;;AAzCqC;;AA4CxC,eAAeL,SAAf,C,CAEF;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Pagination from \"react-js-pagination\";\n// import 'bootstrap-less';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'taskName', headerName: 'TASK NAME', width: 130 },\n  { field: 'lob', headerName: 'LOB', width: 130 },\n  {\n    field: 'subTask',\n    headerName: 'SUB TASK',\n    // type: 'number',\n    width: 130,\n  },\n  {\n    field: 'step',\n    headerName: 'STEP',\n    // description: 'This column has a value getter and is not sortable.',\n    // sortable: false,\n    width: 130,\n//     valueGetter: (params) =>\n//       `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  },\n//   {\n//     field: 'subTask',\n//     headerName: 'SUB TASK',\n//     width: 130,\n//   },\n  {\n    field: 'dueDate',\n    headerName: 'DUE DATE',\n    width: 130,\n  }\n];\n\nconst rows = [\n  { id: 1, taskName: 'Snow', lob: 'aaa', subTask: 'Jon', step: 35, dueDate: 'www' },\n  { id: 1, taskName: 'Snow', lob: 'aaa', subTask: 'Jon', step: 35, dueDate: 'www' },\n  { id: 1, taskName: 'Snow', lob: 'aaa', subTask: 'Jon', step: 35, dueDate: 'www' },\n  { id: 1, taskName: 'Snow', lob: 'aaa', subTask: 'Jon', step: 35, dueDate: 'www' },\n  { id: 1, taskName: 'Snow', lob: 'aaa', subTask: 'Jon', step: 35, dueDate: 'www' },\n  { id: 1, taskName: 'Snow', lob: 'aaa', subTask: 'Jon', step: 35, dueDate: 'www' },\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nconst sampleJson = [\n    {\n      \"id\": 1,\n      \"taskName\": 'aaa',\n      \"lob\": 'aaa', \n      \"subTask\": 'aaa', \n      \"step\": 35, \n      \"dueDate\": 'aaa'\n    },\n    {\n        \"id\": 2,\n        \"taskName\": 'bbb',\n        \"lob\": 'bbb', \n        \"subTask\": 'bbb', \n        \"step\": 35, \n        \"dueDate\": 'bbb'\n    },\n    {\n        \"id\": 3,\n        \"taskName\": 'ccc',\n        \"lob\": 'ccc', \n        \"subTask\": 'ccc', \n        \"step\": 35, \n        \"dueDate\": 'ccc'\n      },\n      {\n        \"id\": 4,\n        \"taskName\": 'ddd',\n        \"lob\": 'ddd', \n        \"subTask\": 'ddd', \n        \"step\": 35, \n        \"dueDate\": 'ddd'\n      },\n      {\n        \"id\": 5,\n        \"taskName\": 'eee',\n        \"lob\": 'eee', \n        \"subTask\": 'eee', \n        \"step\": 35, \n        \"dueDate\": 'eee'\n      },\n      {\n        \"id\": 6,\n        \"taskName\": 'ddd',\n        \"lob\": 'ddd', \n        \"subTask\": 'ddd', \n        \"step\": 35, \n        \"dueDate\": 'ddd'\n      },\n  ]\n\n  \n\n  class DataTable extends React.Component {\n\n    state = {\n        data: [],\n        activePage: 1\n      };\n\n    handlePageChange = pageNumber => {\n        console.log(`active page is ${pageNumber}`);\n        this.setState({\n            data: sampleJson\n        })\n        this.setState({ activePage: pageNumber });\n      };\n      \n\n    render() {\n\n        const allData = sampleJson.map(item => {\n            return item\n            // return <li key={item.id}>{item.title}</li>;\n          });\n\n          console.log('alladata', allData)\n        return(\n        <div>\n        <div style={{ height: 400, width: '75%' }}>\n          <DataGrid rows={sampleJson} columns={columns} pageSize={3} checkboxSelection pagination />\n         \n        </div>\n        <Pagination\n           activePage={this.state.activePage}\n           itemsCountPerPage={2}\n           totalItemsCount={6}\n           pageRangeDisplayed={5}\n           onChange={this.handlePageChange}\n        />\n    \n        <TablePagination />\n        </div>\n        )\n    }\n  }\n\n  export default DataTable;\n\n// export default function DataTable() {\n\n//     const count = 2\n//     console.log('sample json', sampleJson)\n//   return (\n//       <div>\n//     <div style={{ height: 400, width: '75%' }}>\n//       <DataGrid rows={rows} columns={columns} pageSize={count} checkboxSelection />\n     \n//     </div>\n//     <Pagination\n//        activePage={1}\n//        itemsCountPerPage={count}\n//        totalItemsCount={450}\n//        pageRangeDisplayed={5}\n//        onChange={handlePageChange}\n//     />\n\n//     <TablePagination />\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}